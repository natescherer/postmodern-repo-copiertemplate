amends "package://github.com/jdx/hk/releases/download/v1.1.2/hk@1.1.2#/Config.pkl"
import "package://github.com/jdx/hk/releases/download/v1.1.2/hk@1.1.2#/Builtins.pkl"

local linters = new Mapping<String, Step> {
    ["actionlint"] {
        glob = List(".github/workflows/*.{yml,yml[{]% endif %[}]}}")
        batch = true
<<<<<<< before updating
        check = "actionlint {{ files }}"
    }
    ["lychee"] {
        glob = "*"
        check = "lychee -c .config/lychee.toml --cache --max-retries 0 {{ files }}"
=======
        check = "actionlint "
    }
    ["lychee"] {
        glob = "*"
        check = "lychee -c .config/lychee.toml --cache --max-retries 0 "
>>>>>>> after updating
    }
    ["mado"] {
        glob = "*.{md,md[{]% endif %[}]}"
        stage = "*.{md,md[{]% endif %[}]}"
        check = "mado check {{ files }}"
        exclude = "{CHANGELOG.md}"
<<<<<<< before updating
    }
=======
    } 
>>>>>>> after updating
    ["pkl"] {
        glob = "*.pkl"
        check = "pkl eval {{files}}"
    }
    ["ruff"] {
        glob = "*.{py,py[{]% endif %[}]}}"
        stage = "*.{py,py[{]% endif %[}]}}"
        check = "ruff check --config .config/ruff.toml {{ files }}"
        fix = "ruff check --config .config/ruff.toml --fix {{ files }}"
    }
<<<<<<< before updating
    ["taplo"] {
        glob = "*.toml"
        stage = "*.toml"
        check = "taplo check {{ files }}"
        fix = "taplo format {{ files }}"
    } 
    ["typos"] {
        glob = "*"
        exclude = "{CHANGELOG.md}"
        check = "typos -c .config/typos.toml {{files}}"
    }
    ["yamllint"] {
        glob = "*.{yml,yaml,yml[{]% endif %[}],yaml[{]% endif %[}]}"
        check = "yamllint -c .config/.yamllint.yaml {{ files }}"
        exclude = "{.copier-answers.yml}"
    }
=======
    ["typos"] {
        glob = "*"
        check = "typos -c .config/typos.toml "
    }
    ["taplo"] {
        glob = "*.toml"
        stage = "*.toml"
        check = "taplo check "
        fix = "taplo format "
    }
    ["yamllint"] {
        glob = "*.{yml,yaml,yml[{]% endif %[}],yaml[{]% endif %[}]}}"
        check = "yamllint -c .config/.yamllint.yaml {{ files }}"
        exclude = "{.copier-answers.yml}"
    } 
>>>>>>> after updating
}

hooks {
    ["commit-msg"] {
        steps {
            ["validate-commit-msg"] {
                check = "committed --config .config/committed.toml --commit-file {{commit_msg_file}}"
            }
            ["check-commit-spelling"] {
<<<<<<< before updating
                check = "typos -c .config/typos.toml {{commit_msg_file}}"
=======
            check = "typos -c .config/typos.toml {{commit_msg_file}}"
>>>>>>> after updating
            }
        }
    }
    ["pre-commit"] {
        fix = true    // automatically modify files with available linter fixes
        stash = "git" // stashes unstaged changes while running fix steps
        steps {
            ...linters // add all linters defined above
        }
    }
<<<<<<< before updating
=======
    // instead of pre-commit, you can instead define pre-push hooks
    ["pre-push"] {
        steps = linters
    }
>>>>>>> after updating
    // "fix" and "check" are special steps for `hk fix` and `hk check` commands
    ["fix"] {
        fix = true
        steps = linters
    }
    ["check"] {
        steps = linters
    }
}
