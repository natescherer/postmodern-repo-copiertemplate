amends "package://github.com/jdx/hk/releases/download/v1.1.2/hk@1.1.2#/Config.pkl"
import "package://github.com/jdx/hk/releases/download/v1.1.2/hk@1.1.2#/Builtins.pkl"

local linters = new Mapping<String, Step> {
    ["actionlint"] {
        glob = List(".github/workflows/*.{yml,yml[{]% endif %[}]}}")
        batch = true
        check = "actionlint {{ files }}"
    }
    ["cspell"] {
        glob = "*"
        check = "cspell lint -c .config/cspell.yaml --quiet {{files}}"
    }
    ["markdownlint"] {
        glob = "*.{md,md[{]% endif %[}]}"
        stage = "*.{md,md[{]% endif %[}]}"
        check = "markdownlint-cli2 --config .config/.markdownlint.yaml {{ files }}"
        fix = "markdownlint-cli2 --config .config/.markdownlint.yaml --fix {{ files }}"
        exclude = "{CHANGELOG.md}"
    }
    ["markdown-link-check"] {
        glob = "*.{md,md[{]% endif %[}]}"
        check = "markdown-link-check {{ files }}"
        exclude = "{CHANGELOG.md,template/**}"
    }
    ["pkl"] {
        glob = "*.pkl"
        check = "pkl eval {{files}}"
    }
    ["prettier"] = (Builtins.prettier) {
        exclude = "{.release-please-manifest.json}"
    }
    ["ruff"] {
        glob = "*.{py,py[{]% endif %[}]}}"
        stage = "*.{py,py[{]% endif %[}]}}"
        check = "ruff check --config .config/ruff.toml {{ files }}"
        fix = "ruff check --config .config/ruff.toml --fix {{ files }}"
    }
    ["taplo"] = Builtins.taplo
    ["yamllint"]  {
        glob = "*.{yml,yaml,yml[{]% endif %[}],yaml[{]% endif %[}]}"
        check = "yamllint -c .config/.yamllint.yaml {{ files }}"
        exclude = "{.copier-answers.yml}"
    }
}

hooks {
    ["pre-commit"] {
        fix = true    // automatically modify files with available linter fixes
        stash = "git" // stashes unstaged changes while running fix steps
        steps {
            ...linters // add all linters defined above
        }
    }
    // instead of pre-commit, you can instead define pre-push hooks
    ["pre-push"] {
        steps = linters
    }
    // "fix" and "check" are special steps for `hk fix` and `hk check` commands
    ["fix"] {
        fix = true
        steps = linters
    }
    ["check"] {
        steps = linters
    }
}
