## Initial Settings
_answers_file: .config/copier-answers.yml

_jinja_extensions:
  # External Dependencies
  - copier_template_extensions.TemplateExtensionLoader
  - jinja2_shell_extension.ShellExtension
  # Internal Dependencies
  - extensions/yaml_quote_extension.py:YamlQuoteExtension

_message_before_copy: Thanks for using this template! Please consult the 'Template Questions' page in documentation for deeper explanation of each question.

_subdirectory: template

## The below variables are used to track parent/child template relationships and should not be manually adjusted.
parent_template_name:
  type: str
  default: Postmodern Repo Copier Template
  when: false
parent_template_url:
  type: str
  default: https://github.com/natescherer/postmodern-repo-copiertemplate
  when: false

## Questions
repo_name:
  type: str
  help: |
    The name of this project's Git repository. Defaults to the name of the destination folder.
    DO NOT CHANGE ON UPDATE!
  default: "{{ _copier_conf.dst_path | basename }}"

author_name:
  type: str
  help: The name to whom this project will be credited. Autodetect attempted from Git 'user.name'.
  default: "{{ 'git config --global user.name' | shell() | trim }}"

developer_platform:
  type: str
  help: |
    The platform where you are going to host your Git repo and CI/CD.
    DO NOT CHANGE ON UPDATE!
  choices:
    - GitHub
    - Azure DevOps

repo_setup_actions:
  type: str
  help: |
    New project? 'Create Repo'. Existing project? 'Set Repo Rules'. Don't want to do anything? 'None'.
    DO NOT CHANGE ON UPDATE!
  choices:
    - Create Repo
    - Set Repo Rules
    - None

github_token:
  type: str
  secret: true
  default: ""
  help: A GitHub Personal Access Token which will be used to set up your repo. Value is not saved.
  when: "{{ developer_platform == 'GitHub' and not project_initialized and repo_setup_actions != 'None' }}"

github_username:
  type: str
  help: |
    Your GitHub username. Repo will be created under this user unless an org is specified. Autodetect attempted from Git 'user.email'.
    DO NOT CHANGE ON UPDATE!
  default: "{{ (('git config --global user.email' | shell()).split('+') | last).split('@') | first }}"
  when: "{{ developer_platform == 'GitHub' }}"

github_org:
  type: str
  help: |
    [OPTIONAL] If this repo is part of a GitHub organization, supply its name here.
    DO NOT CHANGE ON UPDATE!
  when: "{{ developer_platform == 'GitHub' }}"

azdo_org:
  type: str
  help: |
    The Azure DevOps organization for this project.
    DO NOT CHANGE ON UPDATE!
  when: "{{ developer_platform == 'Azure DevOps' }}"

azdo_token:
  type: str
  secret: true
  default: ""
  help: An Azure DevOps Personal Access Token which will be used to set up your repo. Value is not saved.
  when: "{{ developer_platform == 'Azure DevOps' and not project_initialized and repo_setup_actions != 'None' }}"

azdo_project:
  type: str
  help: |
    The Azure DevOps project for your repo.
    DO NOT CHANGE ON UPDATE!
  when: "{{ developer_platform == 'Azure DevOps' }}"

project_type:
  type: str
  help: |
    If you are creating a basic repo, choose Standard. If you are creating a child template, choose Template.
    DO NOT CHANGE ON UPDATE!
  choices:
    - Standard
    - Template

project_name:
  type: str
  help: The friendly name of this project, which can include captitals, spaces, etc.

project_description:
  type: str
  help: A short (two-ish sentence) description for this project, to be used in documentation and packaging.

project_visibility:
  type: str
  help: |
    Choose if you want this project to be Public or Private.
    DO NOT CHANGE ON UPDATE!
  choices:
    Public:
      value: Public
      validator: "{% if developer_platform == 'Azure DevOps' %}Not Supported on Azure DevOps{% endif %}"
    Private:
      value: Private

license:
  type: str
  help: Choose the license for this project.
  choices:
    MIT:
      value: MIT
      validator: "{% if project_visibility == 'Private' %}Not Supported on Private repos{% endif %}"
    None:
      value: None

mkdocs_target:
  type: str
  help: |
    Choose how you want to publish your documentation
    DO NOT CHANGE ON UPDATE!
  choices:
    GitHub Pages:
      value: GitHub Pages
      validator: "{% if developer_platform == 'Azure DevOps' %}Not Supported on Azure DevOps{% endif %}"
    docs_site Directory in Repo:
      value: docs_site Directory in Repo

lifecycle:
  type: str
  help: Choose what state this project is in.
  choices:
    - Pre-Alpha
    - Alpha
    - Beta
    - Stable
    - Inactive

## Computed Values

using_github:
  type: bool
  default: "{% if developer_platform == 'GitHub' %}true{% endif %}"
  when: false

github_repo_owner:
  type: str
  default: "{% if github_org %}{{ github_org }}{% else %}{{ github_username }}{% endif %}"
  when: false

using_azdo:
  type: bool
  default: "{% if developer_platform == 'Azure DevOps' %}true{% endif %}"
  when: false

azdo_project_encoded:
  type: str
  default: "{{ azdo_project | replace(' ','%20') }}"

using_mit:
  type: bool
  default: "{% if license == 'MIT' %}true{% endif %}"
  when: false

is_public:
  type: bool
  default: "{% if project_visibility == 'Public' %}true{% endif %}"
  when: false

is_private:
  type: bool
  default: "{% if project_visibility == 'Private' %}true{% endif %}"
  when: false

is_standard:
  type: bool
  default: "{% if project_type == 'Standard' %}true{% endif %}"
  when: false

is_template:
  type: bool
  default: "{% if project_type == 'Template' %}true{% endif %}"
  when: false

is_prerelease:
  type: bool
  default: "{% if lifecycle == 'Pre-Alpha' or lifecycle == 'Alpha' or lifecycle == 'Beta' %}true{% endif %}"
  when: false

should_create_repo:
  type: bool
  default: "{% if repo_setup_actions == 'Create Repo' %}true{% endif %}"
  when: false

should_set_repo_settings:
  type: bool
  default: "{% if repo_setup_actions == 'Create Repo' or repo_setup_actions == 'Set Repo Rules' %}true{% endif %}"
  when: false

mkdocs_ghpages:
  type: bool
  default: "{% if mkdocs_target == 'GitHub Pages' %}true{% endif %}"
  when: false

mkdocs_repo:
  type: bool
  default: "{% if mkdocs_target == 'docs/site Directory in Repo' or using_azdo %}true{% endif %}"
  when: false

## Locked Computed Values

copyright_year:
  type: str
  default: "{{ copyright_year | default('%Y' | strftime) }}"
  when: false

## Tasks

_tasks:
  - command: invoke copy-template-files --src-path {{ _copier_conf.src_path }}{% if _copier_conf.vcs_ref %} --vcs-ref {{ _copier_conf.vcs_ref }}{% endif %}
    when: "{% if is_template %}true{% endif %}"
  - command: invoke create-repo-github --repo-name {{ repo_name }} --github-repo-description "{{ project_description }}" --github-repo-owner {{ github_repo_owner }} --is-public {{ is_public }}{% if github_org %} --github-org {{ github_org }}{% endif %}
    when: "{% if _copier_operation == 'copy' and should_create_repo and using_github %}true{% endif %}"
  - command: invoke create-repo-azdo --repo-name {{ repo_name }} --azdo-project {{ azdo_project_encoded }} --azdo-org {{ azdo_org }}
    when: "{% if _copier_operation == 'copy' and should_create_repo and using_azdo %}true{% endif %}"
  - command: invoke set-repo-settings-github --github-repo-owner {{ github_repo_owner }} --repo-name {{ repo_name }} --is-public {{ is_public }}{% if github_org %} --github-org {{ github_org }}{% endif %}
    when: "{% if _copier_operation == 'copy' and should_set_repo_settings and using_github %}true{% endif %}"
  - command: invoke initialize-repo-and-commit-files --lifecycle {{ lifecycle }} --developer-platform "{{ developer_platform }}" --repo-name {{ repo_name }}{% if using_github %} --github-username {{ github_username }}{% if github_repo_owner %} --github-repo-owner {{ github_repo_owner }}{% endif %}{% endif %}{% if using_azdo %} --azdo-org {{ azdo_org }} --azdo-project {{ azdo_project_encoded }}{% endif %}
    when: "{% if _copier_operation == 'copy' and should_create_repo %}true{% endif %}"
  - command: invoke set-branch-protection-ruleset-github --github-repo-owner {{ github_repo_owner }} --repo-name {{ repo_name }}
    when: "{% if _copier_operation == 'copy' and should_set_repo_settings and using_github %}true{% endif %}"
  - command: invoke create-pipelines-azdo --repo-name {{ repo_name }} --azdo-project {{ azdo_project_encoded }} --azdo-org {{ azdo_org }}
    when: "{% if _copier_operation == 'copy' and should_set_repo_settings and using_azdo %}true{% endif %}"
  - command: invoke setup-mkdocs-ghpages --github-repo-owner {{ github_repo_owner }} --repo-name {{ repo_name }}
    when: "{% if _copier_operation == 'copy' and mkdocs_ghpages and repo_setup_actions != 'None' %}true{% endif %}"
  - invoke delete-unneeded-template-files

_message_after_update: |-
  {% if lifecycle == 'Stable' and developer_platform == 'GitHub' and current_release_please_version_is_pre_1 %} It looks like you have switched this project's lifecycle to 'Stable' for the first time. If this is true, merge the following commit to main to have Release Please bump the version number properly.

  git commit --allow-empty -m "chore: bump version to v1.0.0" -m "Release-As: 1.0.0"{% endif %}
