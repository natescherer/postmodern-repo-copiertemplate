[hooks]
{% raw %}postinstall = ["{% set is_in_ci = get_env(name='CI', default='') %}{% if is_in_ci %}echo 'Not setting up git hooks as mise is running in CI!'{% else %}pre-commit install -c .config/.pre-commit-config.yaml{% endif %}"]{% endraw %}

[settings]
experimental = true # Needed for hooks as of v2025.6.2
windows_default_inline_shell_args = "powershell.exe /c"

[tasks.copier-update]
run = "copier update --answers-file .config/copier-answers.yml --skip-answered --trust"

[tasks.docs-server]
run = "mkdocs serve -f .config/mkdocs/mkdocs.yml"

[tasks.test]
run = '''
pre-commit run -c .config/.pre-commit-config.yaml --all-files
copier copy --trust --vcs-ref=HEAD --pretend -d 'repo_name=render-test' -d 'author_name=Name' -d 'repo_setup_actions=None' -d 'developer_platform=GitHub' -d 'github_username=username' -d 'github_org=' -d 'project_description=Rendering Test' -d 'project_type=Template' -d 'project_name=Rendering Test' -d 'project_visibility=Public' -d 'license=MIT' -d 'mkdocs_target=docs_site Directory in Repo' -d 'lifecycle=Pre-Alpha' . fake-path
'''

{%- if is_template %}
[tasks.integration-test-gh]
run = '''
copier copy --trust --vcs-ref={% raw %}{{option(name="branch",default="HEAD")}}{% endraw %} -d 'developer_platform=GitHub' -d 'project_description=Integration Test - NOT FOR PUBLIC USE' -d 'project_type=Template' -d 'project_name=Integration Test' -d 'project_visibility=Public' -d 'license=MIT' -d 'lifecycle=Pre-Alpha' {% if using_github %}https://github.com/{{ github_repo_owner }}/{{ repo_name }}{% elif using_azdo %}git+https://dev.azure.com/{{ azdo_org }}/{{ azdo_project | replace(" ","%20") }}/_git/{{ repo_name }}{% endif %} {% raw %}{{option(name="path")}}{% endraw %}
'''

[tasks.integration-test-azdo]
run = '''
copier copy --trust --vcs-ref={% raw %}{{option(name="branch",default="HEAD")}}{% endraw %} -d 'developer_platform=Azure DevOps' -d 'project_description=Integration Test - NOT FOR PUBLIC USE' -d 'project_type=Template' -d 'project_name=Integration Test' -d 'project_visibility=Private' -d 'license=None' -d 'lifecycle=Pre-Alpha' {% if using_github %}https://github.com/{{ github_repo_owner }}/{{ repo_name }}{% elif using_azdo %}git+https://dev.azure.com/{{ azdo_org }}/{{ azdo_project | replace(" ","%20") }}/_git/{{ repo_name }}{% endif %} {% raw %}{{option(name="path")}}{% endraw %}
'''
{%- endif %}

[tools]
# Backends
{#- renovate: datasource=python-version depName=python versioning=python #}
python = "3.13.6" # Used by copier and pre-commit
# Tools
{#- renovate: datasource=pypi depName=pre-commit versioning=pep440 #}
"pipx:pre-commit" = "4.3.0"
{#- renovate: datasource=github-releases depName=astral-sh/uv #}
uv = "0.8.9" # Used by pipx tools
{#- renovate: datasource=github-releases depName=google/yamlfmt #}
yamlfmt = "0.17.2" # Needed by VSCode extension bluebrown.yamlfmt, can be removed when https://github.com/bluebrown/vscode-extension-yamlfmt/issues/2 is resolved

[tools."pipx:copier"]
version = "9.9.0"
uvx_args = "--with copier-template-extensions==0.3.3 --with jinja2-shell-extension==2.1.1 --with jinja2-time==0.2.0"

[tools."pipx:invoke"]
version = "2.2.0"
uvx_args = "--with copier==9.9.0 --with githubkit==0.13.1 --with requests==2.32.4 --with rich==14.1.0"

[tools."pipx:mkdocs"]
version = "1.6.1"
uvx_args = "--with mkdocs-material==9.6.16 --with mkdocs-static-i18n==1.3.0 --with mike==2.1.3"
