## Initial Settings
_min_copier_version: 9.3.1

_jinja_extensions:
  # External Dependencies
  - copier_templates_extensions.TemplateExtensionLoader
  - jinja2_shell_extension.ShellExtension
  - jinja2_time.TimeExtension
  # Internal Dependencies
  - extensions/azure_devops_extension.py:AzureDevOpsExtension
  - extensions/context.py:ContextUpdater
  - extensions/github_extension.py:GitHubExtension
  - extensions/path_extension.py:PathExtension
  - extensions/slugify_extension.py:SlugifyExtension
  - extensions/version_extension.py:VersionExtension
  - extensions/yaml_quote_extension.py:YamlQuoteExtension

_subdirectory: template

## The below variables are used to track parent/child template relationships and should not be manually adjusted.
parent_template_name:
  type: str
  default: {{ project_name | quote_for_yaml }}
  when: false
parent_template_url:
  type: str
  default: {% if using_github %}{% if github_org %}https://github.com/{{ github_org }}/{{ repo_name }}{% else %}https://github.com/{{ github_username }}/{{ repo_name }}{% endif %}{% endif %}{% if using_azdo %}https://dev.azure.com/{{ azdo_org }}/{{ azdo_project | replace(" ","%20") }}/_git/{{ repo_name }}{% endif %}
  when: false
{%- raw %}

## Questions
repo_name:
  type: str
  help: "{% if _copier_operation == 'update' %}repo_name - DO NOT CHANGE ON COPIER UPDATE{% else %}The name of this project's Git repository. Defaults to the name of the destination path.{% endif %}"
  default: "{{ _copier_conf.dst_path | basename }}"

author_name:
  type: str
  help: The name to whom this project will be credited. Autodetect attempted from Git 'user.name'.
  default: "{{ 'git config --global user.name' | shell() | trim }}"

developer_platform:
  type: str
  help: "{% if _copier_operation == 'update' %}developer_platform - DO NOT CHANGE ON COPIER UPDATE{% else %}The platform where you are going to host your Git repo and CI/CD.{% endif %}"
  choices:
    - GitHub
    - Azure DevOps

repo_actions:
  type: str
  help: "{% if _copier_operation == 'update' %}repo_actions - DO NOT CHANGE ON COPIER UPDATE{% else %}New project? 'Create Repo'. Existing project? 'Set Repo Rules'. Update run? Don't want repo settings changes? 'None'.{% endif %}"
  choices:
    Create Repo:
      value: Create Repo
      validator: "{% if _copier_operation == 'update' %}Disabled on Updates{% endif %}"
    Set Repo Rules:
      value: Set Repo Rules
      validator: "{% if _copier_operation == 'update' %}Disabled on Updates{% endif %}"
    None:
      value: None

github_token:
  type: str
  secret: true
  default: ""
  help: A GitHub Personal Access Token which will be used to {% if repo_actions == 'Create Repo' %}initialize your new repository and apply rules.{% else %}apply rules to your existing repo.{% endif %} Value is not saved.
  when: "{{ developer_platform == 'GitHub' and repo_actions != 'None' }}"
  validator: "{% if github_token is not valid_gh_token and (developer_platform == 'GitHub' and repo_actions != 'None') %}GitHub Token Invalid{% endif %}"

github_username:
  type: str
  help: "{% if _copier_operation == 'update' %}github_username - DO NOT CHANGE ON COPIER UPDATE{% else %}Your GitHub username. Repo will be created under this user unless an org is specified. Autodetect attempted from Git 'user.email'.{% endif %}"
  default: "{{ (('git config --global user.email' | shell()).split('+') | last).split('@') | first }}"
  when: "{{ developer_platform == 'GitHub' }}"

github_org:
  type: str
  help: "{% if _copier_operation == 'update' %}github_org - DO NOT CHANGE ON COPIER UPDATE{% else %}[OPTIONAL] If this repo {% if repo_actions == 'Create Repo' %}should be created under{% else %}is part of{% endif %} a GitHub organization, supply its name here.{% endif %}"
  when: "{{ developer_platform == 'GitHub' }}"

azdo_org:
  type: str
  help: "{% if _copier_operation == 'update' %}azdo_org - DO NOT CHANGE ON COPIER UPDATE{% else %}The Azure DevOps organization to use for the new project.{% endif %}"
  when: "{{ developer_platform == 'Azure DevOps' }}"
  validator: "{% if azdo_org is not extant_azdo_org %}Azure DevOps Organization Does Not Exist{% endif %}"

azdo_token:
  type: str
  secret: true
  default: ""
  help: An Azure DevOps Personal Access Token which will be used to {% if repo_actions == 'Create Repo' %}initialize your new repository and apply rules.{% else %}apply rules to your existing repo.{% endif %} Value is not saved.
  when: "{{ developer_platform == 'Azure DevOps' and repo_actions != 'None' }}"
  validator: "{% if azdo_token is not valid_azdo_token_for_org(azdo_org) and (developer_platform == 'Azure DevOps' and repo_actions != 'None') %}Azure DevOps Token Invalid{% endif %}"

azdo_project:
  type: str
  help: "{% if _copier_operation == 'update' %}azdo_project - DO NOT CHANGE ON COPIER UPDATE{% else %}An Azure DevOps project in organization '{{ azdo_org }}'.{% endif %}"
  when: "{{ developer_platform == 'Azure DevOps' }}"

project_type:
  type: str
  help: "{% if _copier_operation == 'update' %}project_type - DO NOT CHANGE ON COPIER UPDATE{% else %}If this repo will be a basic repo, choose Standard. If this repo will be a child template of this template, choose Template.{% endif %}"
  choices:
    - Standard
    - Template

project_name:
  type: str
  help: The friendly name of the project that will be used in documentation.

project_short_description:
  type: str
  help: Enter a short description of your project to be used in documentation.

project_website:
  type: str
  help: "[OPTIONAL] Enter the website for your project."

project_visibility:
  type: str
  help: "{% if _copier_operation == 'update' %}project_visibility - DO NOT CHANGE ON COPIER UPDATE{% else %}Choose if you want this project to be Public or Private.{% endif %}"
  choices:
    Public:
      value: Public
      validator: "{% if developer_platform == 'Azure DevOps' %}Not Supported on Azure DevOps{% endif %}"
    Private:
      value: Private

license:
  type: str
  help: Choose the license for this project.
  choices:
    - MIT
    - None
  when: "{{ project_visibility == 'Public' }}"

lifecycle:
  type: str
  help: Choose what state this project is in.
  choices:
    - Pre-Alpha
    - Alpha
    - Beta
    - Stable
    - Inactive

## Computed Values

using_github:
  type: bool
  default: "{% if developer_platform == 'GitHub' %}true{% endif %}"
  when: false

using_azdo:
  type: bool
  default: "{% if developer_platform == 'Azure DevOps' %}true{% endif %}"
  when: false

using_mit:
  type: bool
  default: "{% if license == 'MIT' %}true{% endif %}"
  when: false

is_public:
  type: bool
  default: "{% if project_visibility == 'Public' %}true{% endif %}"
  when: false

is_private:
  type: bool
  default: "{% if project_visibility == 'Private' %}true{% endif %}"
  when: false

is_standard:
  type: bool
  default: "{% if project_type == 'Standard' %}true{% endif %}"
  when: false

is_template:
  type: bool
  default: "{% if project_type == 'Template' %}true{% endif %}"
  when: false

is_prerelease:
  type: bool
  default: "{% if lifecycle == 'Pre-Alpha' or lifecycle == 'Alpha' or lifecycle == 'Beta' %}true{% endif %}"
  when: false

should_create_repo:
  type: bool
  default: "{% if repo_actions == 'Create Repo' %}true{% endif %}"
  when: false

should_set_repo_settings:
  type: bool
  default: "{% if repo_actions == 'Create Repo' or repo_actions == 'Set Repo Rules' %}true{% endif %}"
  when: false

## Tasks

_tasks:
  - command: invoke copy-template-files --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if is_template %}true{% endif %}"
  - command: invoke create-repo-github --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_create_repo and using_github %}true{% endif %}"
  - command: invoke create-repo-azdo --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_create_repo and using_azdo %}true{% endif %}"
  - command: invoke set-repo-settings-github --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_set_repo_settings and using_github %}true{% endif %}"
  - command: invoke initialize-repo-and-commit-files --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_create_repo %}true{% endif %}"
  - command: invoke set-branch-protection-ruleset-github --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_set_repo_settings and using_github %}true{% endif %}"
  - command: invoke create-pipelines-azdo --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_set_repo_settings and using_azdo %}true{% endif %}"
  - invoke delete-unneeded-template-files

_message_after_update: |
  {% if lifecycle == 'Stable' and developer_platform == 'GitHub' and current_release_please_version_is_pre_1 %} It looks like you have switched this project's lifecycle to 'Stable' for the first time. If this is true, merge the following commit to main to have Release Please bump the version number properly.

  git commit --allow-empty -m "chore: bump version to v1.0.0" -m "Release-As: 1.0.0"{% endif %}
{%- endraw %}
---
!include copier-question-overrides.yml
