{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"applying_to_existing_projects/","title":"Applying to Existing Projects","text":"<p>To apply this template to an existing project, follow these steps:</p> <ol> <li>Review the prerequisites from Getting Started and decide which method you are using</li> <li>Ensure your project is already using Git, and the all of the following are true:</li> <li>Project is cloned to your local computer</li> <li>All changes are committed</li> <li>Default branch (usually <code>main</code> or <code>master</code>) is checked out</li> <li>Create a new branch (<code>copier-template-apply</code>, for example) from your default branch</li> <li> <p>Make sure your shell is in the project root, then run the appropriate command below based on the method you are using for prerequisites:</p> <p>Docker</p> <pre><code>docker run -v .:/mnt/${PWD##*/} -w /mnt/${PWD##*/} -v ~/.gitconfig:/root/.gitconfig:ro -it --pull always --rm ghcr.io/natescherer/postmodern-tools-container:latest copier copy --trust --overwrite gh:natescherer/postmodern-repo-copiertemplate .\n</code></pre> <p>Devcontainer/Manual</p> <pre><code>copier copy --trust --overwrite gh:natescherer/postmodern-repo-copiertemplate .\n</code></pre> </li> <li> <p>If you are using GitHub, Make sure to choose <code>Set Repo Rules</code> in the first question</p> </li> <li>Set all other settings as appropriate for your project</li> <li>Once the template is applied, review files that have been changed using git, and stage, discard, or modify as appropriate</li> <li>Commit and push the changes, then merge them via a Pull Request</li> <li>You are done, and your project will now operate the same as one that was generated from this template.</li> </ol>"},{"location":"","title":"Getting Started","text":"<p>Documentation is currently being improved, but here is the short version to use this template:</p> <ol> <li>Ensure you have mise installed on your workstation (Linux/macOS/Windows are all supported).</li> <li>Clone this repository and open it in your terminal</li> <li>Run the following to install needed dependencies to use the template:</li> </ol> <pre><code>mise trust\nmise install\n</code></pre> <ol> <li>Run the following to create the template, making sure set the path at the end as appropriate</li> </ol> <pre><code>mise x -- copier copy --trust https://github.com/natescherer/postmodern-repo-copiertemplate ~/local-repo-path-here\n</code></pre>"},{"location":"#stuff-from-old-readme","title":"Stuff from old README","text":""},{"location":"#core","title":"Core","text":""},{"location":"#support-for-multiple-cicd-platforms","title":"Support for Multiple CI/CD Platforms","text":"<ul> <li>GitHub Recommended</li> <li>Creating repos under both users and orgs is supported</li> <li>See GitHub Org Limitations for details about template features excluded for Orgs</li> <li>Azure DevOps</li> <li>See Azure DevOps Limitations for details about features missing for AzDO</li> </ul>"},{"location":"#support-for-public-open-source-and-private-closed-source-repositories","title":"Support for Public (Open-Source) and Private (Closed-Source) Repositories","text":"<p>This template fully supports both public/open-source and private/closed-source repositories. See Public vs Private Repos for the difference.</p>"},{"location":"#support-for-existing-projects","title":"Support for Existing Projects","text":"<p>Postmodern templates are designed to allow either the creation of new templates from scratch or adoption for existing projects with existing code repos.</p>"},{"location":"#support-for-template-updates","title":"Support for Template Updates","text":"<p>Keeping projects in sync with their parent template is a core feature of Copier, and this template will deploy a GitHub Actions Workflow/Azure DevOps Pipeline that will automate the update process.</p>"},{"location":"#support-for-childrecursive-templates","title":"Support for Child/Recursive Templates","text":"<p>It is highly encouraged for you to take this template and make your own child template that meets your needs. Your child template can (optionally) receive updates from this template.</p>"},{"location":"#repository-management","title":"Repository Management","text":"<ul> <li>Creation of new repos and branches</li> <li>Setting of repo settings &amp; branch protection rules</li> <li>Creation of useful non-default issue labels: <code>awaiting pr</code> and <code>blocked</code></li> <li>Contributor management and crediting via All Contributors</li> <li>Dependency updates via Renovate</li> <li>Scheduled checks for updates from parent template</li> </ul>"},{"location":"#code-management-and-formatting","title":"Code Management and Formatting","text":"<ul> <li>Automatic, repository-local dev tool installation via mise</li> <li>Automatic code linting and formatting via pre-commit:</li> <li>Commit message linting via committed</li> <li>GitHub Actions linting via actionlint</li> <li>Markdown linting via mado</li> <li>Python linting and formatting via Ruff</li> <li>Spell checking via typos</li> <li>TOML linting and formatting via Taplo</li> <li>YAML linting via yamllint</li> </ul>"},{"location":"#cicd","title":"CI/CD","text":"<ul> <li>Version number calculation, Changelog updating, releasing, and tagging via Release Please</li> <li>Simple/example release workflow via GitHub Actions</li> </ul>"},{"location":"#support-files","title":"Support Files","text":"<ul> <li><code>.gitignore</code>, set to ignore macOS <code>.DS_Store</code> files and Windows <code>Thumbs.db</code> files</li> <li><code>CODE_OF_CONDUCT.md</code>, derived from The Contributor Covenant</li> <li><code>CONTRIBUTING.md</code>, designed help novices to make their first contribution</li> <li><code>LICENSE</code>, a copy of the MIT License</li> <li><code>README.md</code>, designed for general products</li> </ul>"},{"location":"prerequisites/","title":"Prerequisites","text":""},{"location":"prerequisites/#github","title":"GitHub","text":""},{"location":"prerequisites/#one-time-actions-per-github-userorganization","title":"One-Time Actions Per GitHub User/Organization","text":"<ol> <li>Install the AllContributors GitHub App for your user or organization.<ul> <li>This app provides automatic README crediting when other people contribute to your project</li> <li>If you know you are only going to be making Private projects, you can skip installing this app</li> <li>It is recommended that you give it access to all your repositories, which means you only need to do this step once rather than for each new repo.</li> </ul> </li> <li>Install the Renovate GitHub App for your user or organization.<ul> <li>This app provides automatic dependency updates for your project</li> <li>It is recommended that you give it access to all your repositories, which means you only need to do this step once rather than for each new repo.</li> </ul> </li> <li>Ensure <code>Private vulnerability reporting &gt; Automatically enable for new public repositories</code> is checked in the repo settings.</li> </ol>"},{"location":"public_vs_private_repos/","title":"Public vs Private Repos","text":"<p>In order to increase the usefulness of the Postmodern template ecosystem, full support for both Public and Private repositories are included.</p>"},{"location":"public_vs_private_repos/#what-is-public","title":"What is Public?","text":"<p>For the purposes of this template, a Public repo is an open-source project that is visible to the internet and encourages contributions.</p>"},{"location":"public_vs_private_repos/#what-is-private","title":"What is Private?","text":"<p>For the purposes of this template, a Private repo is a closed-source project that requires authentication to access.</p>"},{"location":"public_vs_private_repos/#differences","title":"Differences","text":"<p>Private repos omit the following features that would not be relevant to them, with reasoning for each:</p>"},{"location":"public_vs_private_repos/#repository-management","title":"Repository Management","text":"<ul> <li>Contributor management and crediting via All Contributors</li> <li>Irrelevant on non-public projects</li> </ul>"},{"location":"public_vs_private_repos/#support-files","title":"Support Files","text":"<ul> <li><code>CODE_OF_CONDUCT.md</code></li> <li>Irrelevant on non-public projects</li> <li><code>CONTRIBUTING.md</code></li> <li>Likely not needed for a private project, but you can always provide your own custom file which will be ignored by template updates</li> <li><code>LICENSE</code></li> <li>No need to license something not available to others, but you can always provide your own custom file which will be ignored by template updates</li> </ul>"},{"location":"token_permissions/","title":"Token Permissions","text":"<p>This doc details the minimum scopes/permissions needed for GitHub/Azure DevOps tokens needed to use this template, along with reasons why.</p>"},{"location":"token_permissions/#github","title":"GitHub","text":"<p>For best security, you should create two GitHub Personal Access tokens via this link, a Repo Setup PAT and a Repo Maintenance PAT, permissions of which are detailed below.</p> <p>The Repo Setup PAT can be stored in your password vault of choice, as you will only need it when you are creating a new repo via this template.</p> <p>The Repo Maintenance PAT should be saved as a GitHub Actions secret on the repository called REPO_MAINTENANCE_PAT.</p> <p>NOTE: Fine-grained tokens are specific NOT used, as they cannot open pull requests. This can be changed once this issue is implemented by GitHub.</p>"},{"location":"token_permissions/#repo-setup-pat-classic-token","title":"Repo Setup PAT (Classic Token)","text":"<p>Repository Access: All repositories</p> Scope Reason repo Needed to create repo &amp; set its settings workflow Needed to commit GitHub Actions workflows"},{"location":"token_permissions/#repo-maintenance-pat-classic-token","title":"Repo Maintenance PAT (Classic Token)","text":"<p>Repository Access: All repositories</p> Scope Reason repo Needed for Copier/Release Please workflows"},{"location":"token_permissions/#azure-devops","title":"Azure DevOps","text":"Scope Reason Build: Read &amp; Execute Needed to allow creating Azure Pipelines Code: Full Needed to create repo"},{"location":"components/template_engine/","title":"Why Copier?","text":"<p>This template started out as a Cookiecutter template, and was inspired by the Hypermodern Python Cookiecutter. Cookiecutter is a great platform, but lacks several features, including:</p> <ul> <li>Conditional Questions</li> <li>Template Updating</li> <li>This was available for Cookiecutters via Cruft, but its featureset seemed to lag behind Cookiecutter's</li> <li>Proper <code>.jinja</code> Extension for Templates</li> <li>Because Cookiecutter didn't use a proper template extension, it caused larger problems for linters and formatters</li> </ul> <p>Copier provides these out of the box, and uses a friendly YAML syntax to boot. The Copier project also explicitly indicates that they want to be a language-agnostic templating engine, which is nice as the Postmodern template family is designed to be useful for any/all purposes.</p>"},{"location":"platform_notes/azure_devops/","title":"Azure DevOps Limitations","text":"<p>Support for Azure DevOps is provided on a best-effort basis and has some limitations compared to GitHub.</p> <ul> <li>Public projects not supported</li> <li>It is assumed that if you are using Azure DevOps, it is due to organizational requirements.</li> <li>GitHub-specific features not implemented</li> <li>Custom Issue tags</li> <li>Renovate</li> <li>Branch protection policies not set</li> <li>It is assumed that your organization will be enforcing this at the project level</li> </ul>"},{"location":"platform_notes/github_org/","title":"GitHub Org Limitations","text":"<p>There are several template features that are intentionally excluded for repositores made under GitHub organizations, detailed below:</p>"},{"location":"platform_notes/github_org/#repo-settings","title":"Repo Settings","text":"<ul> <li><code>Auto-merge for pull requests</code> is not set as it might conflict with org policies</li> <li><code>Delete branch on merge</code> is not set as it would require organization owner rights to set</li> </ul>"}]}